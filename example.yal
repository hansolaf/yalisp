; some example code
; run me with: ./repl example.yal

(def lst (list 5 1 5 2 6 8 13 13 100 31 45 654 12 0 34))

; simple function definition
(defn even? (x) (= (% x 2) 0))
(filter even? lst)

; example of curryed function
(((fn (x) (fn (y) (+ x y))) 3) 2)

; quicksort helper functions
(defn <= (x y) (if (= x y) true (if (< x y) true false)))
(defn smaller-or-equal (lst pivot) (filter (fn (x) (<= x pivot)) lst))
(defn larger (lst pivot) (filter (fn (x) (> x pivot)) lst))

; quicksort
(defn quicksort (lst) (if (nil? lst) lst (append (append (quicksort (smaller-or-equal (cdr lst) (car lst))) (cons (car lst) nil)) (quicksort (larger lst (car lst))))))

; quicksort test
lst
(quicksort lst)
